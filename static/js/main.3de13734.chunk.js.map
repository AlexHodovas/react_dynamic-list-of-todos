{"version":3,"sources":["User.js","TodoList.js","App.js","api/todos.js","api/users.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","name","TodoList","todos","sortTodos","onClick","map","_ref2","id","title","completed","key","src_User","App","_useState","useState","_useState2","Object","slicedToArray","todosWithUsers","setTodosWithUsers","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","hasError","sethasError","_useState7","_useState8","sortType","setSort","length","type","allDataTodos","allUsersData","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","todo","objectSpread2","find","userId","t0","stop","className","src_TodoList","toConsumableArray","reverse","sort","b","localeCompare","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8LASeA,SANF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAC,EAAAC,cAAA,UAAKH,EAAKI,QC4CGC,EA5CE,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,MAAOC,EAAVR,EAAUQ,UAAV,OACfN,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMD,EAAU,QAD3B,OAKAN,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMD,EAAU,UAD3B,aAKAN,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMD,EAAU,WAD3B,wBAKAN,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMD,EAAU,eAD3B,qBAOJN,EAAAC,EAAAC,cAAA,aACIG,EAAMG,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIX,EAAPU,EAAOV,KAAMY,EAAbF,EAAaE,MAAOC,EAApBH,EAAoBG,UAApB,OACVZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKH,GACPV,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAACY,EAAD,CAAMf,KAAMA,IACZC,EAAAC,EAAAC,cAAA,UAAKS,GACLX,EAAAC,EAAAC,cAAA,UAAKU,EAAY,YAAc,sBCuD1BG,EArFH,WAAM,IAAAC,EAC4BC,mBAAS,IADrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACOI,EADPJ,EAAA,GAAAK,EAEkBN,oBAAS,GAF3BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGgBV,oBAAS,GAHzBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGCE,EAHDF,EAAA,GAAAG,EAIYd,mBAAS,IAJrBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAITE,EAJSD,EAAA,GAICE,EAJDF,EAAA,GAqDhB,OAAIH,EAEA7B,EAAAC,EAAAC,cAAA,qDAEEF,EAAAC,EAAAC,cAAA,WAFF,2BAQ0B,IAA1BmB,EAAec,OAEfnC,EAAAC,EAAAC,cAAA,UACEkC,KAAK,SACL7B,QA7Dc,eAAAT,EAAAW,EAAA4B,EAAAC,EAAA,OAAAC,EAAAtC,EAAAuC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEhBhB,GAAa,GAFGe,EAAAE,KAAA,EAAAJ,EAAAtC,EAAA2C,MAKRC,QAAQC,IAAI,CCjBQC,MAChC,8CACAC,KACA,SAAAC,GAAQ,OAAIA,EAASC,SCHWH,MAChC,8CACAC,KACA,SAAAC,GAAQ,OAAIA,EAASC,YFSD,OAAApD,EAAA2C,EAAAU,KAAA1C,EAAAU,OAAAC,EAAA,EAAAD,CAAArB,EAAA,GAITuC,EAJS5B,EAAA,GAIK6B,EAJL7B,EAAA,GAQhBa,EACEe,EAAa7B,IAAI,SAAA4C,GAAI,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAA,GAChBiC,EADgB,CAEnBrD,KAAMuC,EAAagB,KAAK,SAAAvD,GAAI,OAAIA,EAAKW,KAAO0C,EAAKG,cAGrD7B,GAAa,GAdGe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAgBhBf,GAAa,GACbI,GAAY,GAjBI,yBAAAW,EAAAgB,SAAA,sBA+DbhC,EAAY,aAAe,QAMhCzB,EAAAC,EAAAC,cAAA,OAAKwD,UAAU,OACb1D,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACyD,EAAD,CACEtD,MAAOgB,EACPf,UApDY,SAAC8B,GACjB,GAAIH,IAAaG,EACfd,EAAkBH,OAAAyC,EAAA,EAAAzC,CAAIE,GAAgBwC,eACjC,CACL,OAAQzB,GACN,IAAK,KACHd,EAAkBH,OAAAyC,EAAA,EAAAzC,CAAIE,GAAgBwC,WACtC,MACF,IAAK,QACHvC,EAAkBH,OAAAyC,EAAA,EAAAzC,CAAIE,GACnByC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEmC,GAAM4B,cAAcD,EAAE3B,OAC1C,MACF,IAAK,OACHd,EAAkBH,OAAAyC,EAAA,EAAAzC,CAAIE,GACnByC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEmC,GAAMjC,KAAK6D,cAAcD,EAAE3B,GAAMjC,SACrD,MACF,IAAK,YACHmB,EAAkBH,OAAAyC,EAAA,EAAAzC,CAAIE,GACnByC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEmC,GAAQ2B,EAAE3B,MAIlCF,EAAQE,SGnDd6B,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3de13734.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>{user.name}</td>\n);\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoList = ({ todos, sortTodos }) => (\n  <table>\n    <thead>\n      <tr>\n        <th\n          onClick={() => sortTodos('id')}\n        >\n          #id\n        </th>\n        <th\n          onClick={() => sortTodos('user')}\n        >\n          user name\n        </th>\n        <th\n          onClick={() => sortTodos('title')}\n        >\n          what need to be done\n        </th>\n        <th\n          onClick={() => sortTodos('completed')}\n        >\n          completed or no\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      { todos.map(({ id, user, title, completed }) => (\n        <tr key={id}>\n          <td>{id}</td>\n          <User user={user} />\n          <td>{title}</td>\n          <td>{completed ? 'completed' : 'no completed' }</td>\n        </tr>\n      )) }\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { todosPromise } from './api/todos';\nimport { usersPromise } from './api/users';\nimport TodoList from './TodoList';\n\nconst App = () => {\n  const [todosWithUsers, setTodosWithUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, sethasError] = useState(false);\n  const [sortType, setSort] = useState('');\n\n  const loadAllData = async() => {\n    try {\n      setIsLoading(true);\n\n      const [allDataTodos, allUsersData] = (\n        await Promise.all([todosPromise(), usersPromise()])\n      );\n\n      setTodosWithUsers(\n        allDataTodos.map(todo => ({\n          ...todo,\n          user: allUsersData.find(user => user.id === todo.userId),\n        }))\n      );\n      setIsLoading(false);\n    } catch (e) {\n      setIsLoading(false);\n      sethasError(true);\n    }\n  };\n\n  const sortTodos = (type) => {\n    if (sortType === type) {\n      setTodosWithUsers([...todosWithUsers].reverse());\n    } else {\n      switch (type) {\n        case 'id':\n          setTodosWithUsers([...todosWithUsers].reverse());\n          break;\n        case 'title':\n          setTodosWithUsers([...todosWithUsers]\n            .sort((a, b) => a[type].localeCompare(b[type])));\n          break;\n        case 'user':\n          setTodosWithUsers([...todosWithUsers]\n            .sort((a, b) => a[type].name.localeCompare(b[type].name)));\n          break;\n        case 'completed':\n          setTodosWithUsers([...todosWithUsers]\n            .sort((a, b) => a[type] - b[type]));\n          break;\n        default:\n      }\n      setSort(type);\n    }\n  };\n\n  if (hasError) {\n    return (\n      <p>\n          you have some problems with your network,\n        <br />\n          please refresh the page\n      </p>\n    );\n  }\n\n  if (todosWithUsers.length === 0) {\n    return (\n      <button\n        type=\"button\"\n        onClick={loadAllData}\n      >\n        {isLoading ? 'Loading...' : 'Load'}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <TodoList\n        todos={todosWithUsers}\n        sortTodos={sortTodos}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export const todosPromise = () => fetch(\n  'https://jsonplaceholder.typicode.com/todos'\n).then(\n  response => response.json()\n);\n","export const usersPromise = () => fetch(\n  'https://jsonplaceholder.typicode.com/users'\n).then(\n  response => response.json()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}