{"version":3,"sources":["api/todos.js","api/users.js","User.js","TodoList.js","App.js","index.js"],"names":["todosPromise","fetch","then","response","json","usersPromise","User","_ref","user","react_default","a","createElement","name","TodoList","todos","map","_ref2","id","title","completed","key","src_User","App","state","data","isLoading","hasError","todosWithUsers","_this","setState","todosData","usersData","todo","Object","objectSpread2","find","userId","catch","_this$state","this","console","log","length","type","onClick","className","src_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mMAAaA,SAAe,kBAAMC,MAChC,8CACAC,KACA,SAAAC,GAAQ,OAAIA,EAASC,WCHVC,EAAe,kBAAMJ,MAChC,8CACAC,KACA,SAAAC,GAAQ,OAAIA,EAASC,UCMRE,EANF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAC,EAAAC,cAAA,UAAKH,EAAKI,OCyBGC,EAzBE,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,MAAH,OACfL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,+BAGJF,EAAAC,EAAAC,cAAA,aACIG,EAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIT,EAAPQ,EAAOR,KAAMU,EAAbF,EAAaE,MAAOC,EAApBH,EAAoBG,UAApB,OACVV,EAAAC,EAAAC,cAAA,MAAIS,IAAKH,GACPR,EAAAC,EAAAC,cAAA,UAAKM,GACLR,EAAAC,EAAAC,cAACU,EAAD,CAAMb,KAAMA,IACZC,EAAAC,EAAAC,cAAA,UAAKO,GACLT,EAAAC,EAAAC,cAAA,UAAKQ,EAAY,YAAc,sBCsD1BG,6MAnEbC,MAAQ,CACNC,KAAM,GACNC,WAAW,EACXC,UAAU,KAGZC,eAAiB,WACfC,EAAKC,SAAS,CACZJ,WAAW,IAGbzB,IACGE,KAAK,SAAC4B,GACLzB,IAAeH,KAAK,SAAC6B,GACnBH,EAAKC,SAAS,CACZL,KAAMM,EAAUf,IAAI,SAAAiB,GAAI,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACnBD,EADmB,CAEtBxB,KAAMuB,EAAUI,KAAK,SAAA3B,GAAI,OAAIA,EAAKS,KAAOe,EAAKI,aAGhDX,WAAW,QAIhBY,MAAM,WACLT,EAAKC,SAAS,CACZJ,WAAW,EACXC,UAAU,+EAKT,IAAAY,EAC+BC,KAAKhB,MAAnCC,EADDc,EACCd,KAAMC,EADPa,EACOb,UAAWC,EADlBY,EACkBZ,SAIzB,OAFAc,QAAQC,IAAIf,GAERA,EAEAjB,EAAAC,EAAAC,cAAA,qDAEEF,EAAAC,EAAAC,cAAA,WAFF,2BAQgB,IAAhBa,EAAKkB,OAELjC,EAAAC,EAAAC,cAAA,UACEgC,KAAK,SACLC,QAASL,KAAKZ,gBAEbF,EAAY,aAAe,QAMhChB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACbpC,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACmC,EAAD,CAAUhC,MAAOU,YA9DPuB,IAAMC,WCFxBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fc88b7fa.chunk.js","sourcesContent":["export const todosPromise = () => fetch(\n  'https://jsonplaceholder.typicode.com/todos'\n).then(\n  response => response.json()\n);\n","export const usersPromise = () => fetch(\n  'https://jsonplaceholder.typicode.com/users'\n).then(\n  response => response.json()\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>{user.name}</td>\n);\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoList = ({ todos }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>#id</th>\n        <th>user name</th>\n        <th>what need to be done</th>\n        <th>completed or no</th>\n      </tr>\n    </thead>\n    <tbody>\n      { todos.map(({ id, user, title, completed }) => (\n        <tr key={id}>\n          <td>{id}</td>\n          <User user={user} />\n          <td>{title}</td>\n          <td>{completed ? 'completed' : 'no completed' }</td>\n        </tr>\n      )) }\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = { todos: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport { todosPromise } from './api/todos';\nimport { usersPromise } from './api/users';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    data: [],\n    isLoading: false,\n    hasError: false,\n  }\n\n  todosWithUsers = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    todosPromise()\n      .then((todosData) => {\n        usersPromise().then((usersData) => {\n          this.setState({\n            data: todosData.map(todo => ({\n              ...todo,\n              user: usersData.find(user => user.id === todo.userId),\n            }\n            )),\n            isLoading: false,\n          });\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false,\n          hasError: true,\n        });\n      });\n  }\n\n  render() {\n    const { data, isLoading, hasError } = this.state;\n\n    console.log(hasError);\n\n    if (hasError) {\n      return (\n        <p>\n          you have some problems with your network,\n          <br />\n          please refresh the page\n        </p>\n      );\n    }\n\n    if (data.length === 0) {\n      return (\n        <button\n          type=\"button\"\n          onClick={this.todosWithUsers}\n        >\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <TodoList todos={data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}